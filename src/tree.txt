// This file containes the functions associated with the decision tree

#include "tree.h"

/* typedef struct Node { */
/*   int feature; // The feature id to split on */
/*   double value; // The value of the feature to split on */
/*   double threshold; // The threshold of the split */
/*   struct Node *left; // The left child */
/*   struct Node *right; // The right child */
/*   int is_leaf; // Is the node a leaf */
/* } Node; */

// Build the decision tree
// Node* build_tree(DataSet* data, int depth, int max_depth);

// Pass two pointers to record the best feature and threshold for the data
// void select_best_split(DataSet* data, int* best_feature, double* best_threshold);

// Splits the data using the feature and threshold
// void split_data(DataSet* data, int feature, double threshold, DataSet* left, DataSet* right);

// Build a leaf node
// Node* build_leaf(DataSet* data);

void select_best_split(DataSet* data, int* best_feature, double* best_threshold) {

}


Node* build_tree(DataSet* data, int depth, int max_depth) {
  // Check the depth
  if (depth >= max_depth) {
    return build_leaf(data);
  }
  int best_feature;
  double best_threshold;

  // TODO: Select Best split
  // TODO: Split data
  // TODO: Build tree
  // TODO: Return tree
  return NULL;
}
